services:
  audit-service:
    image: maven:3.9-eclipse-temurin-21
    command: ./mvnw spring-boot:run -Dspring-boot.run.profiles=local -pl packages/audit-service
    environment:
      DB_HOST: postgresql
      DB_PORT: 5432
      KAFKA_HOST: kafka
      KAFKA_PORT: 29092
      SCHEMA_REGISTRY_HOST: schema-registry
      SCHEMA_REGISTRY_PORT: 8091
    ports:
      - "8082:8082"
    depends_on:
      mvn-build:
        condition: service_completed_successfully
      postgresql:
        condition: service_healthy
      schema-registry:
        condition: service_healthy
    volumes:
      - .:/usr/src/mymaven:rw
      - $HOME/.m2:/root/.m2
    working_dir: /usr/src/mymaven
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost:8082/actuator/health" ]
      start_period: 30s
      start_interval: 2s
      interval: 30s
      timeout: 10s
      retries: 3

  payments-service:
    image: maven:3.9-eclipse-temurin-21
    command: ./mvnw spring-boot:run -Dspring-boot.run.profiles=local -pl packages/payments-backend
    environment:
      DB_HOST: postgresql
      DB_PORT: 5432
      KAFKA_HOST: kafka
      KAFKA_PORT: 29092
      SCHEMA_REGISTRY_HOST: schema-registry
      SCHEMA_REGISTRY_PORT: 8091
    ports:
      - "8081:8081"
    depends_on:
      mvn-build:
        condition: service_completed_successfully
      postgresql:
        condition: service_healthy
      schema-registry:
        condition: service_healthy
    volumes:
      - .:/usr/src/mymaven:rw
      - $HOME/.m2:/root/.m2
    working_dir: /usr/src/mymaven
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost:8081/actuator/health" ]
      start_period: 30s
      start_interval: 2s
      interval: 30s
      timeout: 10s
      retries: 3


  move-money-service:
    image: maven:3.9-eclipse-temurin-21
    command: ./mvnw -U spring-boot:run -Dspring-boot.run.profiles=local -pl packages/move-money-backend
    environment:
      KAFKA_HOST: kafka
      KAFKA_PORT: 29092
      SCHEMA_REGISTRY_HOST: schema-registry
      SCHEMA_REGISTRY_PORT: 8091
      PAYMENTS_SERVICE_BASE_URL: http://payments-service:8081
      AUDIT_SERVICE_BASE_URL: http://audit-service:8082
    ports:
      - "8080:8080"
    depends_on:
      mvn-build:
        condition: service_completed_successfully
      postgresql:
        condition: service_healthy
      schema-registry:
        condition: service_healthy
    volumes:
      - .:/usr/src/mymaven:rw
      - $HOME/.m2:/root/.m2
    working_dir: /usr/src/mymaven
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost:8080/actuator/health" ]
      start_period: 30s
      start_interval: 2s
      interval: 30s
      timeout: 10s
      retries: 3


  mvn-build:
    image: maven:3.9-eclipse-temurin-21
    command: ./mvnw -U clean install -DskipTests -Dspotless.skip -Dsort.skip --fail-fast
    volumes:
      - .:/usr/src/mymaven:rw
      - $HOME/.m2:/root/.m2
    working_dir: /usr/src/mymaven

  frontend:
    image: wirespec-showcase/frontend
    build:
      dockerfile: frontend.Dockerfile
    command: npm run dev
#    depends_on:
#      move-money-service:
#        condition: service_healthy
    ports:
      - "3000:3000"
    environment:
      VITE_SERVER_MOVE_MONEY: move-money-service
      VITE_SERVER_AUDIT: audit-service
    volumes:
      - ./packages/frontend:/usr/src/app
      - ./wirespec/src:/usr/wirespec/src
      - /usr/src/app/node_modules
    healthcheck:
      test: [ "CMD", "wget", "-q", "--spider", "http://0.0.0.0:3000"]
      interval: 30s
      timeout: 10s
      start_period: 10s
      start_interval: 1s
      retries: 3



  kafka:
    image: confluentinc/cp-kafka:7.4.1
    ports:
      - "29092:29092"
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:29092,PLAINTEXT_HOST://localhost:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    depends_on:
      zookeeper:
        condition: service_healthy
    healthcheck:
      test: kafka-topics --bootstrap-server kafka:9092 --list
      start_interval: 2s
      start_period: 30s
      interval: 30s
      timeout: 3s
      retries: 3

  kafka-ui:
    container_name: kafka-ui
    image: provectuslabs/kafka-ui:latest
    ports:
      - "8090:8080"
    depends_on:
      kafka:
        condition: service_healthy
      schema-registry:
        condition: service_healthy
    environment:
      DYNAMIC_CONFIG_ENABLED: true
      KAFKA_CLUSTERS_0_NAME: wirespec_showcase
      KAFKA_CLUSTERS_0_SCHEMAREGISTRY: http://schema-registry:8091
      KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS: kafka:29092
#    volumes:
#      - ./docker/kui/config.yml:/etc/kafkaui/dynamic_config.yaml

  zookeeper:
    image: confluentinc/cp-zookeeper:7.4.1
    ports:
      - "2181:2181"
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    healthcheck:
      test: nc -z localhost 2181 || exit -1
      start_interval: 2s
      start_period: 30s
      interval: 10s
      timeout: 5s
      retries: 3

  schema-registry:
    image: confluentinc/cp-schema-registry:7.7.1
    ports:
      - "8091:8091"
    environment:
      SCHEMA_REGISTRY_HOST_NAME: schema-registry
      SCHEMA_REGISTRY_KAFKASTORE_CONNECTION_URL: 'zookeeper:2181'
      SCHEMA_REGISTRY_LISTENERS: http://schema-registry:8091,http://localhost:8091
      SCHEMA_REGISTRY_KAFKASTORE_BOOTSTRAP_SERVERS: PLAINTEXT://kafka:29092
      SCHEMA_REGISTRY_DEBUG: 'true'
    depends_on:
      kafka:
        condition: service_healthy
    healthcheck:
      test: curl --output /dev/null --silent --head --fail http://schema-registry:8091/subjects
      start_interval: 2s
      start_period: 60s
      interval: 30s
      timeout: 10s
      retries: 3


  postgresql:
    image: postgres:17.2-alpine
    ports:
      - "5432:5432"
    environment:
      POSTGRES_PASSWORD: postgres
    command: postgres
    volumes:
      - ./docker/postgres:/docker-entrypoint-initdb.d
    healthcheck:
      test: [ "CMD", "pg_isready", "-U", "postgres","-d", "payments" ]
      start_period: 10s
      start_interval: 1s
      interval: 30s
      timeout: 5s
      retries: 3

